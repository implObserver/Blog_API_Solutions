// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRESDB_BLOG_URI")
}

model User {
  id           Int       @id @default(autoincrement())
  email        String?   @unique
  password     String?
  isAdmin      Boolean   @default(false)
  isVerified   Boolean   @default(false)
  refreshToken String?
  profile      Profile?
  posts        Post[]
  comments     Comment[]
  verifyCode   String?
}

model Post {
  id          Int      @id @default(autoincrement())
  title       String
  userId      Int
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  isPublished Boolean  @default(false)
  postingDate DateTime @default(now())
  tag         String   @default("Other")
  elements    Json[]

  comments Comment[]
}

model Comment {
  id           Int      @id @default(autoincrement())
  userId       Int
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  postId       Int
  post         Post     @relation(fields: [postId], references: [id], onDelete: Cascade) // Исправлено: теперь ссылается на 'id' Post
  postingDate  DateTime @default(now())
  text         String?
  isUpdate     Boolean  @default(false)
  updatingDate DateTime @default(now())
}

model Profile {
  userId Int     @id
  user   User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  avatar String?
  name   String?
  gender String?
  age    String?
}
